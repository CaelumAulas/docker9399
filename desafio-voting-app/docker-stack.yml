version: "3"

services:
  vote:
    image: alefh/docker9399_vote
    volumes:
      - vote-data:/app
    ports:
      - "5000:80"
    networks:
      - frontend
      - backend
    deploy:
      labels: [TEAM=backoffice]
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 4
        delay: 5s
      placement:
        constraints: [node.role == manager]

  result:
    image: alefh/docker9399_result
    volumes:
      - result-data:/app
    ports:
      - "5001:80"
      - "5858:5858"
    networks:
      - frontend
      - backend

  worker:
    image: alefh/docker9399_worker
    depends_on:
      - "redis"
      - "db"
    networks:
      - backend
    restart: on-failure

  redis:
    image: redis:alpine
    container_name: redis
    ports: ["6379"]
    networks:
      - backend

  db:
    image: postgres:9.4
    container_name: db
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - backend

volumes:
  db-data:
  result-data:
  vote-data:

networks:
  frontend:
  backend:
